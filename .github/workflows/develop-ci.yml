name: Develop CI

on:
  push:
    branches:
      - develop

# on:
#   pull_request:
#     types:
#       - opened
#       - closed
#     branches:
#       - develop

jobs:

  build:
    # if: startsWith(github.head_ref, 'feature/')
    runs-on: ubuntu-latest
    outputs:
      deployment-matrix: ${{ steps.export-deployment-matrix.outputs.deployment-matrix }}
    steps:
      - uses: actions/checkout@v2

      - name: Export deployment matrix
        id: export-deployment-matrix
        run: |
          JSON="$(cat ./devops/deployment-config.json)"
          JSON="${JSON//'%'/'%25'}"
          JSON="${JSON//$'\n'/'%0A'}"
          JSON="${JSON//$'\r'/'%0D'}"
          echo "::set-output name=deployment-matrix::$JSON"

      - name: Run a one-line script
        run: |
          echo make build here! ${{ github.ref_name }}
          echo "${{ github.head_ref }}"


  deploy:
    # if: startsWith(github.head_ref, 'feature/')
    runs-on: ubuntu-latest
    environment:
      name: develop
      url: '${{ matrix.server.url }}'
    needs: build
    strategy:
      matrix:
        server: ${{ fromJson(needs.build.outputs.deployment-matrix) }}

    steps:
      - name: "${{ matrix.server.name }}: Prepare deploy"
        run: |
          echo "${{ matrix.server.name }}"
          echo "${{ matrix.server.url }}"
          echo "${{ matrix.server.version }}"
          client_code=AWS_CREDENTIALS_${{ matrix.server.name }}
          echo "::set-output name=secret::${client_code}"
        id: prepare_env

      - name: Set ENV Credentials
        run: |
          secret="${{ secrets[steps.prepare_env.outputs.secret] }}"
          aws_key=$(echo "$secret" | sed -n '1p')
          aws_secret=$(echo "$secret" | sed -n '2p')
          echo "::set-output name=aws_key::${aws_key}"
          echo "::set-output name=aws_secret::${aws_secret}"
          echo "key aws: $aws_key"
          echo "secret aws: $aws_secret"
        id: data_secret

      - name: checkout
        if: ${{ steps.data_secret.outputs.aws_key != '' }}
        uses: actions/checkout@v2

      - name: cache
        if: ${{ steps.data_secret.outputs.aws_key != '' }}
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Use Node.js 14.x
        if: ${{ steps.data_secret.outputs.aws_key != '' }}
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Install dependencies
        if: ${{ steps.data_secret.outputs.aws_key != '' }}
        run: npm install

      - name: Create env file
        if: ${{ steps.data_secret.outputs.aws_key != '' }}
        run: |
          cat > env.yml << EOF
          ${{ secrets.ENV }}
          EOF
          cat > version.json << EOF
            { "version": "${{ matrix.server.version }}" }
          EOF

      - name: Serverless Deploy
        if: ${{ steps.data_secret.outputs.aws_key != '' }}
        uses: serverless/github-action@master
        with:
          args: deploy --stage dev
        env:
          AWS_ACCESS_KEY_ID: ${{ steps.data_secret.outputs.aws_key }}
          AWS_SECRET_ACCESS_KEY: ${{ steps.data_secret.outputs.aws_secret }}
